name: Init OCI

on:
  workflow_dispatch:

jobs:
  init-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Git credentials
      uses: fregante/setup-git-user@v2
      with:
        name: github-actions
        email: actions@github.com

    - name: Set up OCI CLI
      uses: oracle/oci-cli-action@v1.1.1
      with:
        tenancy-ocid: ${{ secrets.OCI_TENANCY_OCID }}
        user-ocid: ${{ secrets.OCI_USER_OCID }}
        fingerprint: ${{ secrets.OCI_FINGERPRINT }}
        private-key: ${{ secrets.OCI_PRIVATE_KEY }}
        region: ${{ secrets.OCI_REGION }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Run init script
      env:
        OCI_COMPARTMENT_NAME: ${{ vars.OCI_COMPARTMENT_NAME }}
        OCI_BUCKET_NAME: ${{ vars.OCI_BUCKET_NAME }}
      run: ./init.sh

    - name: Generate backend.tf
      run: |
        NS=$(oci os ns get | jq -r '.data')
        COMPARTMENT_ID=$(oci iam compartment list --name "${{ vars.OCI_COMPARTMENT_NAME }}" --compartment-id ${{ secrets.OCI_TENANCY_OCID }} | jq -r '.data[0].id')

        cat > backend.tf <<EOF
        terraform {
          backend "oci" {
            bucket         = "${{ vars.OCI_BUCKET_NAME }}"
            namespace      = "${NS}"
            compartment_id = "${COMPARTMENT_ID}"
            region         = "${{ secrets.OCI_REGION }}"
            key            = "terraform.tfstate"
          }
        }
        EOF

    - name: Push backend.tf to repo
      run: |
        git add backend.tf
        git commit -m "Add Terraform backend config [auto-generated]"
        git push origin HEAD:${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}