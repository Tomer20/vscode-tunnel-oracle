name: Deploy Infrastructure

on:
  workflow_dispatch:

env:
  TERRAFORM_VERSION: 1.12.2
  OCI_TF_PROVIDER_VERSION: 7.5.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_private_key_path: "~/.oci/oci_api_key.pem"
      TF_VAR_region: ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_name: ${{ vars.OCI_COMPARTMENT_NAME }}
      TF_VAR_compute_ssh_public_key: ${{ secrets.COMPUTE_SSH_PUBLIC_KEY }}
      TF_VAR_vscode_github_token: ${{ secrets.VSCODE_GITHUB_TOKEN }}
      TF_VAR_budget_alert_email: ${{ secrets.BUDGET_ALERT_EMAIL }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip jq unzip
        pip3 install oci-cli

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Configure OCI CLI
      env:
        OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.oci
        echo "${OCI_PRIVATE_KEY}" > ${{ env.TF_VAR_private_key_path }}
        chmod 600 ${{ env.TF_VAR_private_key_path }}

        cat > ~/.oci/config <<EOF
        [DEFAULT]
        user=${{ secrets.OCI_USER_OCID }}
        fingerprint=${{ secrets.OCI_FINGERPRINT }}
        key_file=${{ env.TF_VAR_private_key_path }}
        tenancy=${{ secrets.OCI_TENANCY_OCID }}
        region=${{ secrets.OCI_REGION }}
        EOF
        chmod 600 ~/.oci/config

    - name: Make init.sh executable
      run: chmod +x ./init.sh

    - name: Run init script
      env:
        OCI_COMPARTMENT_NAME: ${{ vars.OCI_COMPARTMENT_NAME }}
        OCI_BUCKET_NAME: ${{ vars.OCI_BUCKET_NAME }}
        OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      run: ./init.sh

    - name: Generate backend.tf variables
      run: |
        echo "OCI_NS=$(oci os ns get | jq -r '.data')" >> $GITHUB_ENV

    - name: Initialize Terraform
      run: |
        terraform init \
          -backend-config="bucket=${{ vars.OCI_BUCKET_NAME }}" \
          -backend-config="namespace=${OCI_NS}" \
          -backend-config="region=${{ secrets.OCI_REGION }}" \
          -backend-config="key=terraform.tfstate"

    - name: Validate Terraform
      run: terraform validate

    - name: Plan Terraform
      run: terraform plan -out=tfplan

    - name: Apply Terraform
      run: terraform apply -auto-approve tfplan